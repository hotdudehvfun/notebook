function main_controller($scope,$timeout,db_service,notebook_service){$scope.quick_notebooks=[],$scope.load_quick_notebooks=function(){notebook_service.load_quick_notebooks($scope.notebooks,function(e){$scope.quick_notebooks=e})},$scope.parse_markdown_to_html=function(e){return parseWikiTextToHTML(e)},$scope.notebook_age=function(){return notebook_service.get_notebook_age($scope.current_notebook)},$scope.open_notebook=function(e){try{if(e){if($scope.pageTitle=e.title,$scope.pageIcon=$scope.get_notebook_icon(e),$scope.current_notebook=e,"system"==e.title.toLowerCase()){$scope.show_view=$scope.CONST.VIEW_SYSTEM,console.log("opening notebook",e);return}$scope.selectedListIndex=$scope.notebooks.indexOf(e),$scope.notes=e.taskArray,$scope.selectedListName=e.title,$scope.show_delete_list_option=!0,$scope.show_purge_list_option=!0,$scope.show_rename_list_option=!0,$scope.is_note_selected=!1,$scope.show_edit_options=!1,$scope.selected_note=void 0,$scope.show_view=$scope.CONST.VIEW_NOTE,$scope.note_content_placeholder=`Create note in ${$scope.selectedListName}`,$scope.init_bottom_bar_menu(),$scope.save_data()}}catch(t){console.log("Error while opening notebook",t)}},$scope.open_sidebar=function(e){try{let t=e?"0px":"-90vw";$scope.sidebar_left={left:t},$scope.dialog_flags.is_sidebar_menu_open=e}catch(o){console.log("Cannot open side bar",o)}},$scope.set_view=function(e){$scope.show_view=e,$scope.show_view==$scope.CONST.VIEW_NOTEBOOK&&($scope.pageTitle=$scope.defaultPageTitle,$scope.pageIcon=$scope.default_app_icon,$scope.selected_note=void 0,$scope.is_note_selected=!1,$scope.init_bottom_bar_menu(),$scope.current_bottom_bar_active_menu=null,$scope.current_notebook=null,$scope.selectedListIndex=-1,$scope.note_content_placeholder="Create quick note")},$scope.handle_input_on_rename_notebook=function(e){try{13==e.keyCode?$scope.rename_notebook():$scope.new_notebook_icon=getIconForTitle($scope.new_list_name)}catch(t){console.log(t)}},$scope.handle_input_on_notebook=function(e){try{13==e.keyCode?("create"==$scope.create_notebook_obj.action&&$scope.handle_click_on_create_notebook_button(),"rename"==$scope.create_notebook_obj.action&&$scope.rename_notebook()):$scope.new_notebook_icon=getIconForTitle($scope.new_list_name)}catch(t){console.log(t)}},$scope.get_notebook_icon=function(e){return notebook_service.get_notebook_icon(e)},$scope.insertTextAtCursor=function(e,t){insertTextAtCursor(e,t)},$scope.get_system_var_length=()=>{try{return Object.keys(system_vars).length}catch(e){console.log(e)}return -1},$scope.get_completed_notes_length=e=>{try{if(e)return e.filter(function(e){return!0==e.isTaskCompleted}).length}catch(t){console.log("error while gettig length of notes")}},$scope.handle_click_on_create_notebook_button=()=>{try{let e=$scope.new_list_name.trim();if(is_valid_notebook_name(e)){if($scope.has_notebook(e)){$scope.show_toast(`${e} notebook already exists`);return}let t=$scope.create_notebook(e);t?(reset_notebook_form(),$scope.show_toast(`Notebook "${e}" created`)):$scope.show_toast("Failed to create notebook")}else $scope.show_toast("Notebook name must be between 2 and 30 characters")}catch(o){console.log(o)}};let is_valid_notebook_name=e=>e.length>1&&e.length<=30;$scope.create_notebook=e=>{try{let t=new List(e,$scope.new_notebook_icon||"folder");return $scope.notebooks.push(t),$scope.save_data(),t}catch(o){return console.log("Error while creating notebook:",o),null}};let reset_notebook_form=()=>{$scope.new_list_name="",$scope.new_notebook_icon="folder",$scope.close_all_dialogs()};$scope.create_note=()=>{try{let e=$scope.note_content.trim();if(is_valid_note_content(e)){let t=new Task(e);t.task_icon=$scope.icons.unchecked,t.set_is_component(),t.set_component_type();let o="";if($scope.current_notebook)$scope.current_notebook.taskArray.push(t),$scope.notes=$scope.current_notebook.taskArray,o=`Note created in ${$scope.current_notebook.title}`;else{let n=get_or_create_quick_notes();n.taskArray.push(t),$scope.notes=n.taskArray,o=`Note created in ${n.title}`}reset_note_form(),$scope.save_data(),$scope.show_toast(o),$scope.bottom_bar_active_div="null"}else $scope.show_toast("Invalid note content")}catch(s){console.error("Error while creating note:",s),$scope.show_toast("Failed to create note")}};let get_or_create_quick_notes=()=>{let e=$scope.notebooks.find(e=>"quick notes"===e.title.toLowerCase());return e||(e=$scope.create_notebook("quick notes")),e},is_valid_note_content=e=>e.length>0,reset_note_form=()=>{$scope.note_content=""};$scope.split_note=e=>{try{console.log(e,$scope.selected_note);let t=$scope.selected_note.title.trim();if(e="new line"==e?"\n":e,t.length>0){let o=split_text_into_tasks(t,e);(o=o.length>0?o:[t]).forEach(e=>{let t=new Task(e);t.taskIcon=$scope.icons.unchecked,t.set_is_component(),t.set_component_type(),$scope.notebooks[$scope.selectedListIndex].taskArray.push(t)}),$scope.notes=$scope.notebooks[$scope.selectedListIndex].taskArray,$scope.note_content="",$scope.pageTitle=$scope.selectedListName,$scope.save_data();let n=o.length>1?`${o.length} Notes added`:"Note added";$scope.show_toast(n)}}catch(s){console.error(s),$scope.show_toast("Failed to split note")}},$scope.get_system_vars=()=>Object.keys(system_vars).sort().reduce((e,t)=>(e[t]=system_vars[t],e),{}),$scope.init_system_var_menu_items=()=>{for(let e in $scope.system_var_menu_items=[],system_vars)system_vars.hasOwnProperty(e)&&$scope.system_var_menu_items.push({icon:"calculate",show:!0,text:e,action(){$scope.insertTextAtCursor("note_content",e)}})},$scope.edit_var=function(e,t){try{$scope.show_delete_system_var_button=!0,$scope.new_var_name=e,$scope.new_var_value=system_vars[e],$scope.system_create_btn_title="Update",$scope.dialog_flags.show_create_system_var_popup=!0}catch(o){console.log("Edit var error",o)}},$scope.clear_system_input_vars=()=>{$scope.new_var_name="",$scope.new_var_value="",$scope.system_create_btn_title="Create",$scope.show_delete_system_var_button=!1},$scope.insert_system_var_at_cursor=()=>{insertTextAtCursor("note_content",$scope.selected_system_var)},$scope.lock_data=()=>{try{if($scope.is_notebook_locked())return $scope.show_toast("Notebook is already locked"),"";if(0==$scope.password.length)return $scope.show_toast("Password is required to lock notebook"),"";$scope.notes.forEach((e,t)=>{e.title=encrypt_data(e.title,$scope.password)}),$scope.password="",$scope.current_notebook.is_locked=!0,$scope.pageIcon="lock",$scope.save_data(),$scope.close_all_dialogs(),$scope.show_toast("Notebook is locked")}catch(e){$scope.show_toast("Cannot lock Notebook"),console.log("Lock data",e)}},$scope.unlock_data=()=>{try{if(0==$scope.password.length)return $scope.show_toast("Password is required to lock notebook"),"";if($scope.is_notebook_locked()){$scope.notes=$scope.current_notebook.taskArray;let e=decrypt_data($scope.notes[0].title,$scope.password);null!==e&&""!==e?($scope.notes.forEach(e=>{e.title=decrypt_data(e.title,$scope.password)}),$scope.password="",$scope.current_notebook.is_locked=!1,$scope.pageIcon=$scope.current_notebook.icon,$scope.save_data(),$scope.close_all_dialogs(),$scope.show_toast("Notebook unlocked")):alert("Invalid password, Try again")}else alert("Notebook is already unlocked")}catch(t){console.log("Unlock data error:",t),alert("An error occurred while unlocking the notebook.")}},$scope.save_theme=()=>{try{$scope.init_theme(),$scope.save_data()}catch(e){console.log("Save theme error:",e)}},$scope.save_data=()=>{try{let e=$scope.is_dark?"dark":"light";db_service.write({notebooks:$scope.notebooks,selectedListIndex:$scope.selectedListIndex,theme:e,system_vars:system_vars,notebook_sort_by:$scope.sort_notebook_selected_item},angular)}catch(t){console.log("Save data error",t)}},$scope.read_data=()=>{try{let e=db_service.read();$scope.notebooks=e.notebooks,$scope.selectedListIndex=parseInt(e.selectedListIndex),system_vars=e.system_vars,$scope.theme=e.theme,$scope.is_dark="dark"==$scope.theme,$scope.init_theme(),$scope.sort_notebook_selected_item=e.notebook_sort_by,$scope.init_system_notebooks()}catch(t){console.log("Read data error",t)}},$scope.delete_notebook=()=>{try{$scope.current_notebook&&confirm("Are you sure?")&&($scope.show_toast("Notebook Deleted"),$scope.notebooks.splice($scope.selectedListIndex,1),$scope.selectedListIndex=0,0!=$scope.notebooks.length?$scope.open_notebook($scope.notebooks[$scope.selectedListIndex]):($scope.notes=[],$scope.pageTitle=$scope.defaultPageTitle),$scope.close_all_dialogs())}catch(e){$scope.show_toast("Failed to delete notebook"),console.log("Error while deleting notebook",e)}},$scope.handle_tap_on_note=function(e){try{console.log(e.is_component),$scope.selected_note=e,$scope.is_note_selected=!0,$scope.task_completed_state=e.isTaskCompleted,$scope.init_note_more_options(),$scope.init_bottom_bar_menu(),$scope.dialog_flags.show_note_more_options=!0}catch(t){console.log("Error",t)}},$scope.handle_dbl_tap_on_note=function(e){try{console.log("dbl click on",e),$scope.open_update_task_popup()}catch(t){console.log("Error",t)}},$scope.handle_remove_completed_tasks=()=>{try{confirm("Are you sure?")&&($scope.notes=$scope.notes.filter(e=>!e.isTaskCompleted),$scope.notebooks[$scope.selectedListIndex].taskArray=$scope.notes,$scope.save_data(),$scope.close_all_dialogs(),$scope.show_toast("Notes deleted"))}catch(e){console.log("Cannot remove completed notes",e)}},$scope.start_bulk_move_completed_tasks=()=>{try{$scope.dialog_flags.show_quick_notebooks=!0}catch(e){console.log("Cannot remove completed notes",e)}},$scope.handle_tap_on_quick_notebooks_item=e=>{try{if($scope.action_on_quick_notebook_item==$scope.CONST.MOVE){$scope.move_selected_notes_to_notebook(e);return}if($scope.action_on_quick_notebook_item==$scope.CONST.OPEN){$scope.open_notebook(e),$scope.close_all_dialogs();return}}catch(t){console.log("Cannot bulk move completed notes",t)}},$scope.delete_task=()=>{try{if(confirm("Are you sure you want to delete the note?")){if($scope.notes=$scope.notes.filter(e=>e!==$scope.selected_note),$scope.notebooks[$scope.selectedListIndex].taskArray=$scope.notes,"trash"!=$scope.current_notebook.title.toLowerCase()){let e=$scope.notebooks.find(e=>"trash"===e.title.toLowerCase());e&&($scope.selected_note.dateCreated=$scope.current_notebook.dateCreated,e.taskArray.push($scope.selected_note)),$scope.show_toast("Note moved to Trash")}else $scope.show_toast("Note deleted forever");$scope.is_note_selected=!1,$scope.selected_note=null,$scope.show_edit_options=!1,$scope.save_data(),$scope.close_all_dialogs()}}catch(t){console.log("Delete error",t)}},$scope.restore_note=()=>{try{if("trash"==$scope.current_notebook.title.toLowerCase()){let e=$scope.notebooks.find(e=>e.dateCreated===$scope.selected_note.dateCreated);console.log("parent",e),e?($scope.notes=$scope.notes.filter(e=>e!==$scope.selected_note),$scope.notebooks[$scope.selectedListIndex].taskArray=$scope.notes,e.taskArray.push($scope.selected_note),$scope.show_toast(`Note moved to ${e.title}`),$scope.save_data()):$scope.show_toast("Parent notebook not found")}}catch(t){console.log("Restore error",t)}},$scope.copy_task=()=>{try{if($scope.selected_note){$scope.copied_task=new Task($scope.selected_note.title);let e=document.createElement("input");e.setAttribute("type","text"),e.value=$scope.selected_note.title,e.select(),e.setSelectionRange(0,99999),navigator.clipboard.writeText(e.value),$scope.show_toast("Note and content copied to clipboard"),$scope.close_all_dialogs()}}catch(t){$scope.show_toast("Failed to copy"),console.log("Error while copying note",t)}},$scope.merge_completed_notes=()=>{try{let e=$scope.notes.filter(e=>e.isTaskCompleted);if(0===e.length){$scope.show_toast("No completed notes to merge");return}let t=e.map(e=>e.title).join("\n\n"),o=new Task(t);$scope.notes=$scope.notes.filter(e=>!e.isTaskCompleted),$scope.notes.push(o),$scope.notebooks[$scope.selectedListIndex].taskArray=$scope.notes,$scope.save_data(),$scope.close_all_dialogs(),$scope.show_toast("Completed notes merged successfully")}catch(n){console.error("Cannot merge completed notes",n)}},$scope.paste_task=()=>{try{$scope.selected_note.title=$scope.selected_note.title.concat("\n",$scope.copied_task.title),$scope.save_data(),$scope.close_all_dialogs(),$scope.copied_task=null,$scope.is_note_selected=!1,$scope.selected_note=null,$scope.show_edit_options=!1,$scope.show_toast("Task pasted")}catch(e){$scope.show_toast("Failed to paste"),console.log("Cannot paste task",e)}},$scope.paste_task_inside_notebook=()=>{try{$scope.selectedListIndex>=0&&($scope.notes.push($scope.copied_task),$scope.copied_task=null,$scope.close_all_dialogs(),$scope.save_data(),$scope.show_toast("Task pasted inside notebook"))}catch(e){$scope.show_toast("Error while pasting inside notebook"),console.log("Error while pasting inside notebook",e)}},$scope.open_update_task_popup=()=>{$scope.note_content=$scope.selected_note.title.trim(),$scope.show_update_task_button=!0,$scope.close_all_dialogs(),$scope.toggle_bottom_bar_div("note")},$scope.update_note=()=>{try{if(0==$scope.note_content.trim().length)confirm("Note is empty.\nDo you want to delete this note?")&&($scope.delete_task(),$scope.bottom_bar_active_div="null",$scope.cancel_update_note());else{let e=$scope.notes.indexOf($scope.selected_note);if(-1!==e){let t=new Task($scope.note_content.trim());t.task_icon=$scope.icons.unchecked,t.set_is_component(),t.set_component_type(),$scope.notes[e]=t,$scope.save_data(),$scope.show_toast("Note updated"),$scope.show_update_task_button=!1,$scope.note_content="",$scope.is_note_selected=!1,$scope.selected_note=null,$scope.show_edit_options=!1,$scope.init_bottom_bar_menu(),$scope.bottom_bar_active_div="null"}else $scope.show_toast("Cannot updated task")}}catch(o){$scope.show_toast("Error while updating note"),console.log("Error while updating note",o)}},$scope.cancel_update_note=()=>{try{console.log("cancel"),$scope.selected_note=null,$scope.show_update_task_button=!1,$scope.note_content=""}catch(e){console.log("Error while updating note",e)}},$scope.purge_notebook=()=>{try{$scope.selectedListIndex>=0&&confirm("Are you sure?")&&($scope.notebooks[$scope.selectedListIndex].taskArray.length=0,$scope.notes.length=0,$scope.empty_notebook_msg=getRandomItem($scope.proverbs),$scope.close_all_dialogs(),$scope.save_data(),$scope.show_toast("All tasks removed"))}catch(e){console.error("Error purging notebook:",e)}},$scope.handle_multi_select_action=e=>{if($scope.CONST.COMPLETE==e){$scope.note_multi_select_array.forEach((e,t)=>{e.isTaskCompleted=!0,e.isSelected=!1}),$scope.note_multi_select_array=[],$scope.is_note_multi_select_on=!1,$scope.save_data();return}if($scope.CONST.MOVE==e){$scope.dialog_flags.show_quick_notebooks=!0,$scope.action_on_quick_notebook_item=$scope.CONST.MOVE;return}if($scope.CONST.MERGE==e){try{let t=$scope.note_multi_select_array.map(e=>e.title).join("\n\n"),o=new Task(t);$scope.notes=$scope.notes.filter(e=>!$scope.note_multi_select_array.includes(e)),$scope.notes.push(o),$scope.notebooks[$scope.selectedListIndex].taskArray=$scope.notes,$scope.save_data(),$scope.show_toast("Notes merged"),$scope.note_multi_select_array=[],$scope.is_note_multi_select_on=!1}catch(n){console.error("Cannot merge completed notes",n)}return}if($scope.CONST.REMOVE==e){try{$scope.notes=$scope.notes.filter(e=>!$scope.note_multi_select_array.includes(e)),$scope.notebooks[$scope.selectedListIndex].taskArray=$scope.notes,$scope.save_data(),$scope.show_toast("Notes removed"),$scope.note_multi_select_array=[],$scope.is_note_multi_select_on=!1}catch(s){console.error(s)}return}if($scope.CONST.CANCEL==e)try{$scope.note_multi_select_array.forEach(e=>e.isSelected=!1),$scope.note_multi_select_array=[],$scope.is_note_multi_select_on=!1}catch(a){console.error(a)}},$scope.move_selected_notes_to_notebook=e=>{try{$scope.note_multi_select_array.forEach(e=>e.isSelected=!1),e.taskArray.push(...$scope.note_multi_select_array);var t=$scope.notebooks.indexOf(e);-1!=t&&($scope.notebooks[t]=e),console.log($scope.notebooks[t]=e),$scope.notes=$scope.notes.filter(e=>!$scope.note_multi_select_array.includes(e)),$scope.notebooks[$scope.selectedListIndex].taskArray=$scope.notes,$scope.save_data(),$scope.close_all_dialogs(),$scope.show_toast(`${$scope.note_multi_select_array.length} notes moved to ${e.title}`),$scope.note_multi_select_array=[],$scope.is_note_multi_select_on=!1}catch(o){console.log(o)}},$scope.handle_tap_on_note_checkbox=e=>{if($scope.is_note_multi_select_on){if(e.isSelected)$scope.note_multi_select_array.push(e);else{let t=$scope.note_multi_select_array.indexOf(e);t>-1&&$scope.note_multi_select_array.splice(t,1)}console.log($scope.note_multi_select_array)}else $scope.toggle_note_completed_state(e)},$scope.toggle_note_completed_state=function(e){e&&(e.isTaskCompleted=!e.isTaskCompleted,e.taskIcon=e.isTaskCompleted?$scope.icons.checked:$scope.icons.unchecked,$scope.save_data())},$scope.nav_more_vert_icon=()=>$scope.dialog_flags.show_list_more_options?"close":"more_horiz",$scope.app_size=()=>{try{let e=0;for(let t=0;t<localStorage.length;t++){let o=localStorage.key(t),n=localStorage.getItem(o);e+=o.length+n.length}return`${(e/1024).toFixed(2)} kb`}catch(s){console.log("App size error",s)}},$scope.init_theme=()=>{$scope.is_dark?document.querySelector("#theme-color").setAttribute("content","#272727"):document.querySelector("#theme-color").setAttribute("content","#ffffff")},$scope.load_last_notebook=()=>{},$scope.handle_click_on_notebook_title=()=>{try{$scope.close_all_dialogs(),$scope.dialog_flags.show_quick_notebooks=!0,$scope.action_on_quick_notebook_item=$scope.CONST.OPEN}catch(e){console.log(e)}},$scope.handle_click_on_more_vert=e=>{e?(console.log("quick"),$scope.current_notebook=e):console.log("notes"),$scope.close_all_dialogs(),$scope.init_notebook_more_options(),$scope.dialog_flags.show_list_more_options=!0},$scope.auto_insert=e=>{try{let t=document.querySelector("#note_content"),o=t.selectionStart,n=t.value.substring(0,o),s=t.value.substring(o),a=n.split("\n"),r=a[a.length-1];if(r.trimStart().startsWith("$")){e.preventDefault();let l=n+"\n$"+s;t.value=l,t.selectionStart=t.selectionEnd=o+2,console.log(t.value)}}catch(i){console.log(i)}},$scope.handle_keypress_note_input=function(e){try{if(document.querySelector("#note_content"),32==e.keyCode||13==e.keyCode){var t={"#today":formatDate(new Date),"#now":formatTime(new Date),"#day":formatDay(new Date)};for(var o in t)$scope.note_content.includes(o)&&($scope.note_content=$scope.note_content.replace(o,t[o]));13==e.keyCode&&$scope.is_list_mode_on&&$scope.insertTextAtCursor("note_content",$scope.current_list_symbol+" ")}}catch(n){console.log(n)}},$scope.handle_select_notebooks=()=>{$scope.select_notebooks=!$scope.select_notebooks,$scope.select_notebooks_menu_text=$scope.select_notebooks?"Cancel Selection":"Select Notebooks",$scope.dialog_flags.show_list_more_options=!1},$scope.notebook_selected_state=function(e){return $scope.is_notebook_selected(e)?$scope.icons.checked:$scope.icons.unchecked},$scope.is_notebook_selected=function(e){return -1!=$scope.selected_notebooks.indexOf(e)},$scope.delete_selected_notebooks=()=>{$scope.selected_notebooks.sort((e,t)=>t-e),$scope.selected_notebooks.forEach(e=>{$scope.notebooks.splice(e,1)}),$scope.selected_notebooks=[],$scope.select_notebooks=!1,$scope.select_notebooks_menu_text="Select Notebooks",$scope.dialog_flags.show_list_more_options=!1,$scope.save_data()},$scope.get_total=()=>{try{let e=0,t=$scope.notebooks.length;return $scope.notebooks.forEach((t,o)=>{e+=t.taskArray.length}),{total_tasks:e,total_notebooks:t}}catch(o){console.log("Error while getting total",o)}},$scope.get_notebooks_list=()=>{let e=$scope.notebooks.map(function(e){return e.title});return e.filter(e=>"system"!=e.toLocaleLowerCase())},$scope.update_selected_list_index=function(e){$scope.selectedListIndex=e,$scope.selectedListName=$scope.notebooks[$scope.selectedListIndex].title,console.log("Selected notebook",$scope.selectedListIndex)},$scope.open_create_system_var_popup=()=>{$scope.dialog_flags.show_create_system_var_popup=!0,$scope.new_var_name="",$scope.new_var_value="",$scope.system_var_popup_title="Create Variable",$scope.system_var_popup_create_button_text="Create",$scope.dialog_flags.show_delete_system_var_button=!1},$scope.evaluate_exp=function(value){function evaluate(e){return e.replace(/\b[a-zA-Z_]\w*\b/g,function(e){if(system_vars.hasOwnProperty(e)){let t=system_vars[e];return"string"==typeof t?evaluate(t):t}return e})}try{let result=eval(evaluate(value));return result=result%1==0?result:result.toFixed(2)}catch(error){return console.error("Invalid expression: ",error),"Invalid expression"}},$scope.delete_system_var=()=>{confirm("Are you sure?")&&(delete system_vars[$scope.new_var_name],$scope.dialog_flags.show_delete_system_var_button=!1,$scope.save_data(),$scope.show_toast("System var removed"),$scope.new_var_name="",$scope.new_var_value="")},$scope.create_system_var=()=>{if(""!=$scope.new_var_name.trim()&&""!=$scope.new_var_value.trim())$scope.new_var_name=$scope.new_var_name.trim().toLocaleLowerCase(),$scope.new_var_value=$scope.new_var_value.trim().toLocaleLowerCase();else{$scope.show_toast("Varibale name and value are required");return}system_vars[$scope.new_var_name]=$scope.new_var_value,$scope.show_toast(`Variable ${$scope.system_create_btn_title}d`),$scope.clear_system_input_vars(),$scope.save_data(),$scope.close_all_dialogs()},$scope.open_create_new_note_popup=()=>"trash"==$scope.selectedListName.toLowerCase()?$scope.show_toast("Cannot create note inside Trash"):"system"==$scope.selectedListName.toLowerCase()?$scope.show_toast("Cannot create note inside System"):void($scope.close_all_dialogs(),$scope.dialog_flags.show_create_task_popup=!0,$scope.note_content="",document.querySelector("#note_content").focus(),$scope.selectedListIndex>=0?$scope.show_select_notebooks_dropdown=!1:$scope.show_select_notebooks_dropdown=!0),$scope.handle_rename_notebook=()=>{try{$scope.close_all_dialogs(),$scope.create_notebook_obj.action="rename",$scope.dialog_flags.show_notebook_popup=!0,$scope.focus_input(".add-new-list-title")}catch(e){console.log(e)}},$scope.rename_notebook=()=>{try{if(!$scope.current_notebook)return $scope.show_toast("Error: No list is selected");let e=$scope.new_list_name?.trim();if(!e)return $scope.show_toast("Error: Input required");let t=["system","trash"];if(t.includes(e.toLowerCase()))return $scope.show_toast(`Error: ${e} is a reserved title`);if($scope.has_notebook(e))return $scope.show_toast(`${e} notebook already exists`);$scope.current_notebook.title=e,$scope.current_notebook.icon=$scope.new_notebook_icon||"folder",$scope.new_notebook_icon="folder",$scope.save_data(),$scope.close_all_dialogs(),$scope.show_view===$scope.CONST.VIEW_NOTE&&($scope.pageTitle=e),$scope.new_list_name="",$scope.show_toast("Notebook renamed successfully")}catch(o){console.error("Error while renaming notebook",o),$scope.show_toast("Exception occurred while renaming notebook")}},$scope.notebook_has_completed_tasks=()=>$scope.notes.some(e=>!0===e.isTaskCompleted),$scope.is_notebook_locked=()=>$scope.current_notebook?.is_locked||!1,$scope.init_notebook_more_options=()=>{$scope.current_notebook&&($scope.notebook_more_options=[{text:$scope.is_notebook_locked()?"Unlock notebook":"Lock notebook",icon:"lock.square",class:"task-more-options-item",show:!0,action(){$scope.close_all_dialogs(),$scope.dialog_flags.show_password_popup=!0,$scope.focus_input("#password")}},{text:"Paste Task",icon:"document.on.clipboard",class:"task-more-options-item",show:null!=$scope.copied_task,action(){$scope.paste_task_inside_notebook()}},{text:"Rename notebook",icon:"textformat.characters.dottedunderline",class:"task-more-options-item",show:!0,action(){$scope.handle_rename_notebook()}},{text:"Move completed tasks",icon:"truck.box.fill",class:"task-more-options-item",show:$scope.notebook_has_completed_tasks(),action(){$scope.start_bulk_move_completed_tasks()}},{text:"Merge completed tasks",icon:"arrow.trianglehead.merge",class:"task-more-options-item",show:$scope.notebook_has_completed_tasks(),action(){$scope.merge_completed_notes()}},{text:"Remove completed tasks",icon:"rectangle.stack.fill.badge.minus",class:"task-more-options-item",show:$scope.notebook_has_completed_tasks(),action(){$scope.handle_remove_completed_tasks()}},{text:"Refresh",icon:"arrow.clockwise.circle.fill",class:"task-more-options-item",show:!0,action(){location.reload()}},{text:"Delete all tasks",icon:"exclamationmark.triangle.fill",class:"task-more-options-item text-red-500",show:!0,action(){$scope.purge_notebook()}},{text:"Delete notebook",icon:"trash.square.fill",class:"task-more-options-item text-red-500",show:!0,action(){$scope.delete_notebook()}}])},$scope.init_note_more_options=()=>{try{$scope.is_trash_open="trash"==$scope.current_notebook.title.toLowerCase(),$scope.note_more_options=[{text:"Edit Chart",icon:"chart.xyaxis.line",class:"task-more-options-item",show:$scope.selected_note.component_type==COMPONENT.TYPE.CHART,action(){$scope.open_update_task_popup(),$scope.component_menu_items[1].action()}},{text:"Add transaction",icon:"cash",class:"task-more-options-item",show:$scope.selected_note.component_type==COMPONENT.TYPE.TRANSCATIONS,action(){$scope.open_update_task_popup()}},{text:"Update note",icon:"square.and.pencil",class:"task-more-options-item",show:!0,action(){$scope.open_update_task_popup()}},{text:"Toggle complete",icon:"button.programmable",class:"task-more-options-item",show:!0,action(){$scope.selected_note.isTaskCompleted=!$scope.selected_note.isTaskCompleted,$scope.selected_note.taskIcon=$scope.selected_note.isTaskCompleted?"radio_button_checked":"radio_button_unchecked",$scope.save_data(),$scope.close_all_dialogs()}},{text:"Select notes",icon:"checkmark.circle.fill",class:"task-more-options-item",show:!0,action(){$scope.is_note_multi_select_on=!0,$scope.show_note_complete_button=!1,$scope.close_all_dialogs()}},{text:"Restore note",icon:"arrow.uturn.backward.square",class:"task-more-options-item",show:$scope.is_trash_open,action(){$scope.restore_note()}},{text:"Copy note",icon:"document.on.document.fill",class:"task-more-options-item",show:!0,action(){$scope.copy_task()}},{text:"Paste inside note",icon:"document.on.clipboard",class:"task-more-options-item",show:null!=$scope.copied_task,action(){$scope.paste_task()}},{text:"Split note",icon:"square.3.layers.3d.middle.filled",class:"task-more-options-item",show:!0,action(){$scope.split_note("new line"),$scope.save_data(),$scope.close_all_dialogs()}},{text:"Delete note",icon:"trash.square.fill",class:"task-more-options-item",show:!$scope.show_split_note_btns,action(){$scope.delete_task()}}]}catch(e){console.log("Error while init more options",e)}},$scope.prepare_insert_menu_items=()=>{try{return $scope.insert_menu_items=[{text:"\uD83D\uDCC6 Today",action(){$scope.insertTextAtCursor("note_content",formatDate(new Date))}},{text:"\uD83D\uDCC6 Day",action(){$scope.insertTextAtCursor("note_content",formatDay(new Date))}},{text:"\uD83D\uDCC6 Now",action(){$scope.insertTextAtCursor("note_content",formatTime(new Date))}},{text:"\uD83D\uDCDD Heading",action(){$scope.insertTextAtCursor("note_content","## H2")}},{text:"✏️ Highlight",action(){$scope.insertTextAtCursor("note_content","!important!")}},{text:"✅ List",action(){$scope.insertTextAtCursor("note_content","* Item")}},{text:"\uD83D\uDCC8 Progress bar",action(){$scope.insertTextAtCursor("note_content","#50%")}},{text:"\uD83E\uDDE9 Split notes",action(){$scope.insertTextAtCursor("note_content","$ ")}},{text:"\uD83D\uDDC4️ Table",action(){$scope.insertTextAtCursor("note_content","@table\n||a,b\n|c,d")}},{text:"\uD83C\uDF55 Chart",action(){$scope.new_chart.show=!0}},{text:"\uD83D\uDCD6 Circular Progress",action(){$scope.insertTextAtCursor("note_content",`@circular_bars
A, B, C
50, 50, 50`)}},{text:"\uD83D\uDCB0 Transactions",action(){$scope.insertTextAtCursor("note_content",`@transcations
Desc, category, cash or credit, account, amount, date`)}},],$scope.insert_menu_items}catch(e){console.log(e)}},$scope.prepare_component_menu_items=()=>{try{$scope.component_menu_items=[{text:"\uD83E\uDD16 Robot",action(){}},{text:"\uD83D\uDCCA Edit chart",action(){$scope.is_valid_chart_code($scope.note_content)?$scope.new_chart.show=!0:alert("Invalid chart code!")}},{text:"✅ Selection to bullets",action(){$scope.add_symbol_to_selected_text("-")}},{text:"✅ All to bullets",action(){$scope.convert_to_bullets("-")}},{text:"\uD83D\uDD20 Heading with bullets",action(){$scope.convert_heading_with_bullets()}},{text:"\uD83D\uDD22 Selection to numbered list",action(){$scope.add_numbers_to_selected_text()}}]}catch(e){console.log(e)}},$scope.init_bottom_bar_menu=()=>{$scope.bottom_bar_menu=[{text:"List mode",icon:"list.bullet.rectangle",class:"chip2",show:!0,action(e){$scope.toggle_bottom_bar_active_menu(e.text),$scope.current_bottom_bar_active_menu=null,$scope.is_list_mode_on=$scope.bottom_bar_active_menu==e.text,$scope.show_toast(`List mode ${bool_to_on_off($scope.is_list_mode_on)} | ${$scope.current_list_symbol}`)}}]},$scope.toggle_bottom_bar_active_menu=e=>{$scope.bottom_bar_active_menu=$scope.bottom_bar_active_menu===e?"null":e},$scope.handle_db_operation_change=()=>{try{console.log($scope.db_operation)}catch(e){console.error(e)}},$scope.export_data=()=>{try{if(0==$scope.password.length)return alert("Protect this file with a password to continue"),"";let e=JSON.stringify(localStorage);e=encrypt_data(e,$scope.password),$scope.password="";let t=new Blob([e],{type:"text/plain"}),o=document.createElement("a");o.href=URL.createObjectURL(t),o.download=get_download_file_name(),o.click(),URL.revokeObjectURL(o.href),$scope.dialog_flags.show_db_popup=!1,$scope.db_operation=null}catch(n){console.log("Error export db",n)}},$scope.$on("file_onchange",function(e,t){$scope.db_textarea=t}),$scope.$on("update_note_content_from_outside",function(e,t){$scope.note_content=t,console.log($scope.note_content)}),$scope.$on("broadcast_right_swipe",function(e,t){}),$scope.copy_to_clipboard=function(e){navigator.clipboard&&navigator.clipboard.writeText&&navigator.clipboard.writeText(e).then(()=>{$scope.show_toast("Copied to clipboard!")}).catch(function(e){$scope.show_toast("Failed to copy text to clipboard."),console.error("Could not copy text: ",e)})},$scope.import_data=()=>{try{if($scope.db_operation!=$scope.CONST.IMPORT)return $scope.show_toast("Operation not selected"),"";if(0==$scope.db_textarea.length)return $scope.show_toast("Missing text"),"";if($scope.db_textarea=$scope.unlock_file(),!is_valid_json($scope.db_textarea))return $scope.show_toast("Invalid JSON code"),"";if(confirm("Overwrite everything with new data?")){let e=JSON.parse($scope.db_textarea);Object.keys(e).forEach(t=>{localStorage.setItem(t,e[t])}),$scope.show_toast("Import Successful"),$scope.db_textarea="",$scope.db_operation=null,$scope.close_all_dialogs(),$scope.notebooks=$scope.read_data(),$scope.init()}}catch(t){$scope.show_toast("Failed to import data."),console.error("Failed to import data.",t)}},$scope.unlock_file=()=>{try{if($scope.password.length>0){let e=decrypt_data($scope.db_textarea,$scope.password);if(null!==e&&""!==e)return $scope.password="",e}return -1}catch(t){}},$scope.handle_note_edit_option_change=()=>{$scope.note_edit_selected_option&&$scope.insertTextAtCursor("note_content",$scope.note_edit_selected_option)},$scope.is_any_dialog_open=()=>Object.values($scope.dialog_flags).some(e=>e),$scope.close_all_dialogs=()=>{try{for(let e in $scope.open_sidebar(!1),$scope.dialog_flags)$scope.dialog_flags.hasOwnProperty(e)&&($scope.dialog_flags[e]=!1)}catch(t){console.log(t)}},$scope.init_system_notebooks=()=>{let e=-1,t=-1;$scope.notebooks.forEach((o,n)=>{"system"==o.title.toLowerCase()&&(e=n),"trash"==o.title.toLowerCase()&&(t=n)}),-1==e&&$scope.notebooks.push(new List("System","keyboard_command_key")),-1==t&&$scope.notebooks.push(new List("Trash","recycling"))},$scope.init_sortable_list=function(e,t){$scope[`sortable-${t}`]=Sortable.create(document.querySelector(e),{animation:250,dragClass:"sortable-drag",handle:".handle",onEnd:function(e){if(e.newIndex!=e.oldIndex){let[o]=$scope[t].splice(e.oldIndex,1);$scope[t].splice(e.newIndex,0,o),$scope.save_data()}}})},$scope.show_toast=e=>{e&&(e=e.trim(),$scope.is_toast_visible=!0,$scope.toast_msg=e,toast_timer_id&&clearTimeout(toast_timer_id),toast_timer_id=$timeout(()=>{$scope.is_toast_visible=!1,console.log("clear toast")},2e3))},$scope.toggle_data_lock=()=>{$scope.is_data_locked?$scope.unlock_data():$scope.lock_data(),$scope.is_data_locked=!$scope.is_data_locked},$scope.exclude_sys_trash=function(e){return"system"!==e.title.toLowerCase()&&"trash"!==e.title.toLowerCase()},$scope.only_sys_trash=function(e){return"system"==e.title.toLowerCase()||"trash"==e.title.toLowerCase()},$scope.toggle_lock_on_notebook=()=>{console.log();$scope.notebooks[$scope.selectedListIndex].hasOwnProperty("is_locked")},$scope.choose_create_btn=e=>{let t=["Creat notes","Create notebook","System vars"];$scope.show_all_create_btns?($scope.create_btns_arr=[!1,!1,!1],$scope.create_btns_arr[e]=!0,$scope.show_toast(t[e]),$scope.show_all_create_btns=!1):$scope.show_all_create_btns=!0},$scope.get_component_details=()=>{if(!$scope.selected_note)return"Note not selected";if(!$scope.selected_note.title.trim().startsWith("@"))return"Component Detected:Text";{let e=$scope.selected_note.title.trim().split("\n")[0];return`Component Detected:${e=e.split("@")[1]}`}},$scope.greet_user=e=>greet_user(e),$scope.toggle_bottom_bar_div=e=>{$scope.bottom_bar_active_div=$scope.bottom_bar_active_div===e?"null":e,"note"==e&&($scope.init_bottom_bar_menu(),$scope.prepare_insert_menu_items(),$scope.prepare_component_menu_items(),$scope.focus_input("#note_content"))},$scope.get_note_content_placeholder=()=>$scope.current_notebook?`Create note in <div class='inline orange bold'>${$scope.current_notebook.title}</div>`:"Create quick note",$scope.has_notebook=e=>$scope.notebooks.find(t=>t.title.toLowerCase()===e.toLowerCase()),$scope.focus_input=e=>{$timeout(function(){document.querySelector(e)?.focus()},0)},$scope.get_grouped_notebooks=function(){try{let e=new Date,t=$scope.notebooks,o={"Recently Created":[],"This Month":[],Older:{}};return t.forEach(t=>{let n=new Date(t.dateCreated);if(7>=Math.floor((e-n)/864e5))o["Recently Created"].push(t);else if(n.getFullYear()===e.getFullYear()&&n.getMonth()===e.getMonth())o["This Month"].push(t);else{let s=n.toLocaleString("default",{month:"long",year:"numeric"});o.Older[s]||(o.Older[s]=[]),o.Older[s].push(t)}}),o}catch(n){console.log(n)}return[]},$scope.get_grouped_notebooks_title=function(){let e=$scope.notebooks,t={};e.forEach(e=>{let o=e.title.charAt(0).toUpperCase();o.match(/[A-Z]/)||(o="#"),t[o]||(t[o]=[]),t[o].push(e)});let o=Object.keys(t).sort((e,t)=>"#"===e?1:"#"===t?-1:e.localeCompare(t)),n={};return o.forEach(e=>{n[e]=t[e]}),console.log(n),n},$scope.$watch("notebooks",function(e,t){e!==t&&$scope.handle_group_notebooks()},!0),$scope.convert_heading_with_bullets=function(){try{let e=document.getElementById("note_content");if(!e)return;let t=e.value.trim().split("\n");if(0===t.length)return;t[0]="### "+t[0];for(let o=1;o<t.length;o++)t[o]="- "+t[o];$scope.note_content=t.join("\n")}catch(n){console.log(er)}},$scope.convert_to_bullets=function(e){try{let t=document.getElementById("note_content");if(!t)return;let o=t.value.trim().split("\n");if(0===o.length)return;for(let n=0;n<o.length;n++)o[n]=`${e} ${o[n]}`;$scope.note_content=o.join("\n")}catch(s){console.log(er)}},$scope.add_symbol_to_selected_text=function(e){let t=document.getElementById("note_content");if(!t)return;let o=t.selectionStart,n=t.selectionEnd,s=t.value;if(o===n)return;let a=s.substring(o,n).split("\n").map(t=>e+" "+t).join("\n"),r=s.substring(0,o)+a+s.substring(n);t.value=r,t.setSelectionRange(o,o+a.length),$scope.note_content=r},$scope.add_numbers_to_selected_text=function(){let e=document.getElementById("note_content");if(!e)return;let t=e.selectionStart,o=e.selectionEnd,n=e.value;if(t===o)return;let s=n.substring(t,o).split("\n").map((e,t)=>t+1+". "+e).join("\n"),a=n.substring(0,t)+s+n.substring(o);e.value=a,e.setSelectionRange(t,t+s.length),$scope.note_content=a},$scope.get_chart_colors=()=>CHART_COLORS,$scope.get_transparent_color=(e,t)=>util_get_transparent_color(e,t),$scope.reset_new_chart_and_close=()=>{$scope.new_chart={title:"Untitled",type:"line",theme:"red",x_labels:"",y_values:"",chart_id:0,show:!1}},$scope.new_chart_convert_ui_to_code=()=>{try{$scope.new_chart.chart_id=new Date().getTime();let e="";e+="@chart",e+=`
${$scope.new_chart.type}`,e+=`
${$scope.new_chart.title}`,e+=`
${$scope.new_chart.chart_id}#${$scope.new_chart.theme}`,e+=`
${$scope.new_chart.x_labels.split("\n").join(",")}`,e+=`
${$scope.new_chart.y_values.split("\n").join(",")}`,$scope.note_content=e.trim(),$scope.is_valid_chart_code(e)?$scope.reset_new_chart_and_close():alert("Invalid chart code!")}catch(t){console.log(t)}},$scope.is_valid_chart_code=e=>{try{let t=e.trim().split("\n");if(t.length<6||"@chart"!==t[0].trim())return!1;let o=t[1].trim().toLowerCase();if("line"!==o&&"bar"!==o)return!1;let n=t[2].trim(),s=t[3].trim().split("#"),a=s[0].trim(),r=s[1]?s[1].trim():"blue",l=t[4].trim().split(","),i=t[5].trim().split(",");if(l.length!=i.length||(l=l.map(e=>e.trim()).join("\n"),i=i.map(e=>e.trim()).join("\n"),!l||!i))return!1;return $scope.new_chart={title:n,type:o,theme:r,x_labels:l,y_values:i,chart_id:a,show:!1},!0}catch(c){console.log(c)}return!1},$scope.handle_select_menu_change=()=>{try{$scope.bottom_bar_sub_menu_selected_item.action()}catch(e){console.log(e)}},$scope.handle_select_system_menu_change=()=>{try{$scope.insertTextAtCursor("note_content",$scope.bottom_bar_sub_menu_selected_item)}catch(e){console.log(e)}},$scope.handle_sort_notebook_change=()=>{try{$scope.handle_group_notebooks(),$scope.save_data()}catch(e){console.log(e)}},$scope.handle_group_notebooks=()=>{"date"==$scope.sort_notebook_selected_item&&($scope.grouped_notebooks=$scope.get_grouped_notebooks()),"title"==$scope.sort_notebook_selected_item&&($scope.grouped_notebooks=$scope.get_grouped_notebooks_title())},$scope.get_svg_src=e=>{let t=`./img/icons/${e}.svg`;return e?t:"./img/icons/leaf.fill.svg"},$scope.init_create_notebook_obj=()=>({create:{title:"Open new notebook",placeholder:"New notebook name",icon:"pencil.and.list.clipboard"},rename:{title:"Rename notebook",placeholder:"New name for this notebook",icon:"pencil.and.list.clipboard"},action:"create"}),$scope.init=()=>{$scope.CONST={IMPORT:"import",EXPORT:"export",VIEW_NOTEBOOK:"notebook",VIEW_NOTE:"note",VIEW_SYSTEM:"system_var",COMPLETE:1,MOVE:2,MERGE:3,REMOVE:4,OPEN:5,CANCEL:6},$scope.dialog_flags={is_sidebar_menu_open:!1,show_list_more_options:!1,show_create_task_popup:!1,show_db_popup:!1,show_create_system_var_popup:!1,show_password_popup:!1,show_quick_notebooks:!1,show_note_more_options:!1,show_notebook_popup:!1},$scope.show_delete_system_var_button=!1,$scope.show_nav_more_vert_button=!1,$scope.show_delete_list_option=!1,$scope.show_purge_list_option=!1,$scope.show_select_notebooks_dropdown=!0,$scope.show_update_task_button=!1,$scope.is_sortable=!1,$scope.is_toast_visible=!1,$scope.is_data_locked=!1,$scope.is_trash_open=!1,$scope.toast_msg="",$scope.is_note_selected=!1,$scope.show_edit_options=!1,$scope.show_insert_options=!1,$scope.show_component_options=!1,$scope.show_edit_options_system_vars=!1,$scope.show_note_complete_button=!1,$scope.show_split_note_btns=!1,$scope.show_view=$scope.CONST.VIEW_NOTEBOOK,$scope.bottom_bar_active_div="null",$scope.bottom_bar_active_menu="null",$scope.is_list_mode_on=!1,$scope.current_list_symbol="-",$scope.list_symbols_array=["✅","⚠","-","*"],$scope.system_create_btn_title="Create",$scope.is_note_multi_select_on=!1,$scope.note_multi_select_array=[],$scope.action_on_quick_notebook_item=$scope.CONST.OPEN,$scope.sort_notebook_selected_item="date",$scope.new_chart={title:"Untitled",type:"line",theme:"red",x_labels:"",y_values:"",chart_id:0,show:!1},$scope.new_transaction={desc:"",category:"Bill",categories:["Bill","Food","Shopping","Entertainment","Travel","Health","Education","Investments","Savings","Books","Luxury item","Misc"],method:"cash",account:"none",date:"none",amount:0,show:!1},$scope.circular_progress={heading_pos:"left",x_labels:"",y_values:"",show:!1},$scope.create_btns_arr=[!1,!0,!1],$scope.show_all_create_btns=!1,$scope.show_searchbar=!1,$scope.textarea_default_height=64,$scope.textarea_max_height=200,$scope.new_notebook_icon="folder",$scope.icons={checked:"radio_button_checked",unchecked:"radio_button_unchecked"},$scope.defaultPageTitle="Notebooks",$scope.default_app_icon="leaf.fill",$scope.pageTitle=$scope.defaultPageTitle,$scope.pageIcon="leaf.fill",$scope.copied_task=null,$scope.db_operation=null,$scope.create_notebook_obj=$scope.init_create_notebook_obj(),$scope.select_notebooks=!1,$scope.selected_notebooks=[],$scope.select_notebooks_menu_text="Select Notebooks",$scope.note_content="",$scope.new_list_name="",$scope.selected_note=null,$scope.note_content_placeholder="Create quick note",$scope.new_var_name="",$scope.new_var_value="",$scope.max_notebook_title_len=20,$scope.note_textarea_container_default_height=35,$scope.note_textarea_container_height=35,$scope.note_textarea_container_max_height=250,$scope.password="",$scope.selected_split_delimiter="\n",$scope.presets_delimiters=["new line","#","$","!"],$scope.proverbs=["An empty vessel can hold anything.","An empty mind makes progress.","Emptiness is the beginning of all things.","An empty mind is a clear mind.","The empty pot makes the loudest noise.","The less you carry, the farther you go.","Only when the cup is empty can it be filled.","In the void, possibilities are endless.","Silence is a source of great strength.","Emptiness is the path to wisdom.","A full cup cannot accept more water.","True understanding comes from nothingness.",],$scope.empty_notebook_msg=getRandomItem($scope.proverbs),$scope.notebooks=[],$scope.notes=[],$scope.read_data(),$scope.init_notebook_more_options(),$scope.handle_group_notebooks()}}